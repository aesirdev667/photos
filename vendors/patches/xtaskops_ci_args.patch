diff --git a/xtaskops/src/tasks.rs b/xtaskops/src/tasks.rs
index 4286e0c..c01b225 100644
--- a/xtaskops/src/tasks.rs
+++ b/xtaskops/src/tasks.rs
@@ -29,7 +29,7 @@ pub struct CI {
 
     /// turn all clippy lints on: pedantic, nursery, 2018-idioms
     /// default: on
-    #[builder(default = "true")]
+    #[builder(default = "false")]
     pub clippy_max: bool,
 }
 
@@ -72,8 +72,11 @@ impl CIBuilder {
 /// # Errors
 /// Fails if any command fails
 ///
-pub fn ci() -> AnyResult<()> {
-    CIBuilder::default().run()
+pub fn ci(nightly: bool, clippy_max: bool) -> AnyResult<()> {
+    CIBuilder::default()
+        .nightly(nightly)
+        .clippy_max(clippy_max)
+        .run()
 }
 
 ///
@@ -260,7 +263,7 @@ pub fn install() -> AnyResult<()> {
 /// This function will return an error if any command failed
 #[cfg(feature = "clap")]
 pub fn main() -> AnyResult<()> {
-    use clap::{AppSettings, Arg, Command};
+    use clap::{AppSettings, Arg, ArgAction, Command};
     let cli = Command::new("xtask")
         .setting(AppSettings::SubcommandRequiredElseHelp)
         .subcommand(
@@ -273,7 +276,23 @@ pub fn main() -> AnyResult<()> {
             ),
         )
         .subcommand(Command::new("vars"))
-        .subcommand(Command::new("ci"))
+        .subcommand(
+            Command::new("ci")
+                .arg(
+                    Arg::new("nightly")
+                        .short('n')
+                        .long("nightly")
+                        .help("run with nightly")
+                        .action(ArgAction::SetTrue),
+                )
+                .arg(
+                    Arg::new("clippy-max")
+                        .short('m')
+                        .long("clippy-max")
+                        .help("turn all clippy lints on: pedantic, nursery, 2018-idioms")
+                        .action(ArgAction::SetTrue),
+                ),
+        )
         .subcommand(Command::new("powerset"))
         .subcommand(
             Command::new("bloat-deps").arg(
@@ -305,7 +324,7 @@ pub fn main() -> AnyResult<()> {
             println!("root: {root:?}");
             Ok(())
         }
-        Some(("ci", _)) => crate::tasks::ci(),
+        Some(("ci", sm)) => crate::tasks::ci(sm.get_flag("nightly"), sm.get_flag("clippy-max")),
         Some(("docs", _)) => crate::tasks::docs(),
         Some(("powerset", _)) => crate::tasks::powerset(),
         Some(("bloat-deps", sm)) => crate::tasks::bloat_deps(
